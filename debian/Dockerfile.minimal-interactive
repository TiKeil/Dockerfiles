# This file is part of the dune-community/Dockerfiles project:
#   https://github.com/dune-community/Dockerfiles
# Copyright 2010-2017 dune-community/Dockerfiles developers and contributors. All rights reserved.
# License: Dual licensed as BSD 2-Clause License (http://opensource.org/licenses/BSD-2-Clause)
#      or  GPL-2.0+ (http://opensource.org/licenses/gpl-license)
# Authors:
#   Felix Schindler (2017)

FROM dunecommunity/dailywork:debian-minimal

MAINTAINER Felix Schindler <felix.schindler@wwu.de>

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends bash-completion ccache clang-3.8 clang-format-3.8 gdb ninja-build qtcreator time valgrind vim-nox

RUN mkdir -p /home/user/.ccache && \
    echo "max_size = 5.0G" > /home/user/.ccache/ccache.conf && \
    cd /usr/local/bin && \
    for ii in cc clang clang-3.8 clang++-3.8 cpp cpp-4.9 g++ g++-4.9 gcc ; do ln -s $(which ccache) $ii; done

RUN cd /tmp && \
    wget http://de.archive.ubuntu.com/ubuntu/pool/main/u/ubuntu-font-family-sources/ttf-ubuntu-font-family_0.80-0ubuntu2_all.deb && \
    dpkg -i ttf-ubuntu-font-family_0.80-0ubuntu2_all.deb && \
    rm ttf-ubuntu-font-family_0.80-0ubuntu2_all.deb

# clean up, there might be some leftovers
RUN apt-get autoremove && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN groupadd -g 1000 user && \
    useradd -md /home/$USERNAME_ -g user -s /bin/bash -u 1000 user && \
    chown -R user:user /home/user && \
    echo "user ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

RUN cd /home/user && \
    git clone https://github.com/dune-community/dune-gdt-super.git && \
    cd dune-gdt-super && \
    git checkout issue-93 && \
    git submodule update --init --recursive && \
    export OPTS=gcc-debug.ninja && \
    cd debian-minimal && \
    . ./PATH.sh && \
    cd $BASEDIR && \
    ./local/bin/download_external_libraries.py && \
    ./local/bin/build_external_libraries.py && \
    ./dune-common/bin/dunecontrol --opts=config.opts/$OPTS --builddir=$INSTALL_PREFIX/../build-$OPTS all && \
    chown -R 1000:1000 /home/user/dune-gdt-super

RUN cd /home/user/dune-gdt-super/debian-minimal && \
       . ./PATH.sh && \
       export OPTS=gcc-debug.ninja && \
       cd $INSTALL_PREFIX/../build-$OPTS/dune-gdt && \
       ninja -j$(nproc --all) test_linearelliptic__swipdg_discretization || echo "This failure is expected"

RUN chown -R 1000:1000 /home/user/dune-gdt-super

ADD entrypoint.sh /usr/local/bin/
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

