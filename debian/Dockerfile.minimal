# This file is part of the dune-community/Dockerfiles project:
#   https://github.com/dune-community/Dockerfiles
# Copyright 2010-2017 dune-community/Dockerfiles developers and contributors. All rights reserved.
# License: Dual licensed as BSD 2-Clause License (http://opensource.org/licenses/BSD-2-Clause)
#      or  GPL-2.0+ (http://opensource.org/licenses/gpl-license)
# Authors:
#   Felix Schindler (2017)

FROM debian:jessie

MAINTAINER Felix Schindler <felix.schindler@wwu.de>

ENV DEBIAN_FRONTEND noninteractive

# locale is mainly required for the interactive session
RUN apt-get update && \
    apt-get upgrade -y --no-install-recommends && \
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && \
    echo "de_DE.UTF-8 UTF-8" >> /etc/locale.gen && \
    apt-get install -y --no-install-recommends locales && \
    export LANG=en_US.UTF-8 && \
    dpkg-reconfigure locales

# we require jessie-backports for some packages (see below), but we only allow them in manual installs
# the upgrade should thus be a noop
RUN echo "Package: *" >> /etc/apt/preferences.d/jessie-backports && \
    echo "Pin: release a=jessie-backports" >> /etc/apt/preferences.d/jessie-backports && \
    echo "Pin-Priority: 200" >> /etc/apt/preferences.d/jessie-backports && \
    echo "deb http://deb.debian.org/debian jessie-backports main" > /etc/apt/sources.list.d/jessie-backports.list && \
    apt-get update && \
    apt-get upgrade -y --no-install-recommends

# sudo and gosu are only required for the interactive session
# for gosu see https://github.com/pymor/Dockerfiles/blob/master/base/xenial/Dockerfile.in
RUN set -x && \
    export GOSU_VERSION=1.9 && \
    apt-get install -y --no-install-recommends ca-certificates wget sudo && \
    dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" && \
    wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" && \
    wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" && \
    export GNUPGHOME="$(mktemp -d)" && \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \
    gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \
    rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc && \
    chmod +x /usr/local/bin/gosu && \
    gosu nobody true

# the bare minimum, part 1
RUN apt-get update && \
    apt-get install -y --no-install-recommends build-essential cmake git libboost-system-dev libboost-thread-dev \
                                               libboost-filesystem-dev libboost-date-time-dev libboost-timer-dev \
                                               libboost-chrono-dev pkg-config python python-dev unzip wget

# the bare minimum, part 2: there is a bug in virtualenvs with debians python3.4 (jessie and jessie-backports)
# so we compile python >= 3.5, see https://hub.docker.com/_/python/, in particular
# https://github.com/docker-library/python/blob/7eca63adca38729424a9bab957f006f5caad870f/3.6/Dockerfile
# we also install virtualenv via the newly installed pip
RUN apt-get update && \
    apt-get install -y --no-install-recommends libncurses5-dev libsqlite3-dev libssl-dev tcl tk tcl-dev tk-dev && \
    export LANG=C.UTF-8 && \
    export GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D && \
    export PYTHON_VERSION=3.6.0 && \
    export PYTHON_PIP_VERSION=9.0.1 && \
    wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" && \
    wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" && \
    export GNUPGHOME="$(mktemp -d)" && \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" && \
    gpg --batch --verify python.tar.xz.asc python.tar.xz && \
    rm -r "$GNUPGHOME" python.tar.xz.asc && \
    mkdir -p /usr/src/python && \
    tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz && \
    rm python.tar.xz && \
    cd /usr/src/python && \
    ./configure --enable-loadable-sqlite-extensions --enable-shared && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    if [ ! -e /usr/local/bin/pip3 ]; then \
        wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' && \
        python3 /tmp/get-pip.py "pip==$PYTHON_PIP_VERSION" && \
        rm /tmp/get-pip.py; \
    fi && \
    pip3 install --no-cache-dir --upgrade --force-reinstall "pip==$PYTHON_PIP_VERSION" && \
    [ "$(pip list |tac|tac| awk -F '[ ()]+' '$1 == "pip" { print $2; exit }')" = "$PYTHON_PIP_VERSION" ] && \
    apt-get purge -y --auto-remove libncurses5-dev libsqlite3-dev libssl-dev tcl-dev tk-dev && \
    find /usr/local -depth \( \( -type d -a -name test -o -name tests \) -o \( -type f -a -name '*.pyc' -o -name '*.pyo' \) \) -exec rm -rf '{}' + && \
    rm -rf /usr/src/python ~/.cache && \
    cd /usr/local/bin && \
    { [ -e easy_install ] || ln -s easy_install-* easy_install; } && \
    ln -s idle3 idle && \
    ln -s pydoc3 pydoc && \
    ln -s python3 python && \
    ln -s python3-config python-config && \
    pip install virtualenv && \
    pip3 install virtualenv

# the bare minimum, part 3
# we require cmake >= 3.1, jessie-backports is enough
RUN apt-get update && \
    apt-get -t jessie-backports install -y --no-install-recommends cmake

# clean up, there might be some leftovers
RUN apt-get autoremove && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

ADD entrypoint.sh /usr/local/bin/
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

